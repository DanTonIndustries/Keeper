/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-08-18 at 00:28:12 UTC 
 * Modify at your own risk.
 */

package com.example.antonnazareth.keeper.backend.myApi;

/**
 * Service definition for MyApi (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MyApiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class MyApi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the myApi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://keeper-1337.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "myApi/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public MyApi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  MyApi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addTeam".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddTeam#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public AddTeam addTeam(java.lang.String name) throws java.io.IOException {
    AddTeam result = new AddTeam(name);
    initialize(result);
    return result;
  }

  public class AddTeam extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "addTeam/{name}";

    /**
     * Create a request for the method "addTeam".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddTeam#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddTeam#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected AddTeam(java.lang.String name) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public AddTeam setAlt(java.lang.String alt) {
      return (AddTeam) super.setAlt(alt);
    }

    @Override
    public AddTeam setFields(java.lang.String fields) {
      return (AddTeam) super.setFields(fields);
    }

    @Override
    public AddTeam setKey(java.lang.String key) {
      return (AddTeam) super.setKey(key);
    }

    @Override
    public AddTeam setOauthToken(java.lang.String oauthToken) {
      return (AddTeam) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTeam setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTeam) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTeam setQuotaUser(java.lang.String quotaUser) {
      return (AddTeam) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTeam setUserIp(java.lang.String userIp) {
      return (AddTeam) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public AddTeam setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public AddTeam set(String parameterName, Object value) {
      return (AddTeam) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addTeamUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddTeamUser#execute()} method to invoke the remote operation.
   *
   * @param teamid
   * @param userid
   * @return the request
   */
  public AddTeamUser addTeamUser(java.lang.String teamid, java.lang.String userid) throws java.io.IOException {
    AddTeamUser result = new AddTeamUser(teamid, userid);
    initialize(result);
    return result;
  }

  public class AddTeamUser extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "addTeamUser/{teamid}/{userid}";

    /**
     * Create a request for the method "addTeamUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddTeamUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddTeamUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param teamid
     * @param userid
     * @since 1.13
     */
    protected AddTeamUser(java.lang.String teamid, java.lang.String userid) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
      this.teamid = com.google.api.client.util.Preconditions.checkNotNull(teamid, "Required parameter teamid must be specified.");
      this.userid = com.google.api.client.util.Preconditions.checkNotNull(userid, "Required parameter userid must be specified.");
    }

    @Override
    public AddTeamUser setAlt(java.lang.String alt) {
      return (AddTeamUser) super.setAlt(alt);
    }

    @Override
    public AddTeamUser setFields(java.lang.String fields) {
      return (AddTeamUser) super.setFields(fields);
    }

    @Override
    public AddTeamUser setKey(java.lang.String key) {
      return (AddTeamUser) super.setKey(key);
    }

    @Override
    public AddTeamUser setOauthToken(java.lang.String oauthToken) {
      return (AddTeamUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTeamUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTeamUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTeamUser setQuotaUser(java.lang.String quotaUser) {
      return (AddTeamUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTeamUser setUserIp(java.lang.String userIp) {
      return (AddTeamUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String teamid;

    /**

     */
    public java.lang.String getTeamid() {
      return teamid;
    }

    public AddTeamUser setTeamid(java.lang.String teamid) {
      this.teamid = teamid;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String userid;

    /**

     */
    public java.lang.String getUserid() {
      return userid;
    }

    public AddTeamUser setUserid(java.lang.String userid) {
      this.userid = userid;
      return this;
    }

    @Override
    public AddTeamUser set(String parameterName, Object value) {
      return (AddTeamUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addUser".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public AddUser addUser(java.lang.String name) throws java.io.IOException {
    AddUser result = new AddUser(name);
    initialize(result);
    return result;
  }

  public class AddUser extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "addUser/{name}";

    /**
     * Create a request for the method "addUser".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link AddUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected AddUser(java.lang.String name) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public AddUser setAlt(java.lang.String alt) {
      return (AddUser) super.setAlt(alt);
    }

    @Override
    public AddUser setFields(java.lang.String fields) {
      return (AddUser) super.setFields(fields);
    }

    @Override
    public AddUser setKey(java.lang.String key) {
      return (AddUser) super.setKey(key);
    }

    @Override
    public AddUser setOauthToken(java.lang.String oauthToken) {
      return (AddUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddUser setQuotaUser(java.lang.String quotaUser) {
      return (AddUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddUser setUserIp(java.lang.String userIp) {
      return (AddUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public AddUser setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public AddUser set(String parameterName, Object value) {
      return (AddUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "buildTeamUsersTable".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link BuildTeamUsersTable#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public BuildTeamUsersTable buildTeamUsersTable() throws java.io.IOException {
    BuildTeamUsersTable result = new BuildTeamUsersTable();
    initialize(result);
    return result;
  }

  public class BuildTeamUsersTable extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "buildTeamUsersTable";

    /**
     * Create a request for the method "buildTeamUsersTable".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link BuildTeamUsersTable#execute()} method to invoke the remote
     * operation. <p> {@link BuildTeamUsersTable#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected BuildTeamUsersTable() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public BuildTeamUsersTable setAlt(java.lang.String alt) {
      return (BuildTeamUsersTable) super.setAlt(alt);
    }

    @Override
    public BuildTeamUsersTable setFields(java.lang.String fields) {
      return (BuildTeamUsersTable) super.setFields(fields);
    }

    @Override
    public BuildTeamUsersTable setKey(java.lang.String key) {
      return (BuildTeamUsersTable) super.setKey(key);
    }

    @Override
    public BuildTeamUsersTable setOauthToken(java.lang.String oauthToken) {
      return (BuildTeamUsersTable) super.setOauthToken(oauthToken);
    }

    @Override
    public BuildTeamUsersTable setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (BuildTeamUsersTable) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public BuildTeamUsersTable setQuotaUser(java.lang.String quotaUser) {
      return (BuildTeamUsersTable) super.setQuotaUser(quotaUser);
    }

    @Override
    public BuildTeamUsersTable setUserIp(java.lang.String userIp) {
      return (BuildTeamUsersTable) super.setUserIp(userIp);
    }

    @Override
    public BuildTeamUsersTable set(String parameterName, Object value) {
      return (BuildTeamUsersTable) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "buildTeamsTable".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link BuildTeamsTable#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public BuildTeamsTable buildTeamsTable() throws java.io.IOException {
    BuildTeamsTable result = new BuildTeamsTable();
    initialize(result);
    return result;
  }

  public class BuildTeamsTable extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "buildTeamsTable";

    /**
     * Create a request for the method "buildTeamsTable".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link BuildTeamsTable#execute()} method to invoke the remote operation.
     * <p> {@link BuildTeamsTable#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected BuildTeamsTable() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public BuildTeamsTable setAlt(java.lang.String alt) {
      return (BuildTeamsTable) super.setAlt(alt);
    }

    @Override
    public BuildTeamsTable setFields(java.lang.String fields) {
      return (BuildTeamsTable) super.setFields(fields);
    }

    @Override
    public BuildTeamsTable setKey(java.lang.String key) {
      return (BuildTeamsTable) super.setKey(key);
    }

    @Override
    public BuildTeamsTable setOauthToken(java.lang.String oauthToken) {
      return (BuildTeamsTable) super.setOauthToken(oauthToken);
    }

    @Override
    public BuildTeamsTable setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (BuildTeamsTable) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public BuildTeamsTable setQuotaUser(java.lang.String quotaUser) {
      return (BuildTeamsTable) super.setQuotaUser(quotaUser);
    }

    @Override
    public BuildTeamsTable setUserIp(java.lang.String userIp) {
      return (BuildTeamsTable) super.setUserIp(userIp);
    }

    @Override
    public BuildTeamsTable set(String parameterName, Object value) {
      return (BuildTeamsTable) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "buildUsersTable".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link BuildUsersTable#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public BuildUsersTable buildUsersTable() throws java.io.IOException {
    BuildUsersTable result = new BuildUsersTable();
    initialize(result);
    return result;
  }

  public class BuildUsersTable extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "buildUsersTable";

    /**
     * Create a request for the method "buildUsersTable".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link BuildUsersTable#execute()} method to invoke the remote operation.
     * <p> {@link BuildUsersTable#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
     * lientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected BuildUsersTable() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public BuildUsersTable setAlt(java.lang.String alt) {
      return (BuildUsersTable) super.setAlt(alt);
    }

    @Override
    public BuildUsersTable setFields(java.lang.String fields) {
      return (BuildUsersTable) super.setFields(fields);
    }

    @Override
    public BuildUsersTable setKey(java.lang.String key) {
      return (BuildUsersTable) super.setKey(key);
    }

    @Override
    public BuildUsersTable setOauthToken(java.lang.String oauthToken) {
      return (BuildUsersTable) super.setOauthToken(oauthToken);
    }

    @Override
    public BuildUsersTable setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (BuildUsersTable) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public BuildUsersTable setQuotaUser(java.lang.String quotaUser) {
      return (BuildUsersTable) super.setQuotaUser(quotaUser);
    }

    @Override
    public BuildUsersTable setUserIp(java.lang.String userIp) {
      return (BuildUsersTable) super.setUserIp(userIp);
    }

    @Override
    public BuildUsersTable set(String parameterName, Object value) {
      return (BuildUsersTable) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "countTeamUsers".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CountTeamUsers#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public CountTeamUsers countTeamUsers() throws java.io.IOException {
    CountTeamUsers result = new CountTeamUsers();
    initialize(result);
    return result;
  }

  public class CountTeamUsers extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "countTeamUsers";

    /**
     * Create a request for the method "countTeamUsers".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CountTeamUsers#execute()} method to invoke the remote operation.
     * <p> {@link CountTeamUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected CountTeamUsers() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public CountTeamUsers setAlt(java.lang.String alt) {
      return (CountTeamUsers) super.setAlt(alt);
    }

    @Override
    public CountTeamUsers setFields(java.lang.String fields) {
      return (CountTeamUsers) super.setFields(fields);
    }

    @Override
    public CountTeamUsers setKey(java.lang.String key) {
      return (CountTeamUsers) super.setKey(key);
    }

    @Override
    public CountTeamUsers setOauthToken(java.lang.String oauthToken) {
      return (CountTeamUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public CountTeamUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CountTeamUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CountTeamUsers setQuotaUser(java.lang.String quotaUser) {
      return (CountTeamUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public CountTeamUsers setUserIp(java.lang.String userIp) {
      return (CountTeamUsers) super.setUserIp(userIp);
    }

    @Override
    public CountTeamUsers set(String parameterName, Object value) {
      return (CountTeamUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "countTeams".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CountTeams#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public CountTeams countTeams() throws java.io.IOException {
    CountTeams result = new CountTeams();
    initialize(result);
    return result;
  }

  public class CountTeams extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "countTeams";

    /**
     * Create a request for the method "countTeams".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CountTeams#execute()} method to invoke the remote operation. <p>
     * {@link
     * CountTeams#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected CountTeams() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public CountTeams setAlt(java.lang.String alt) {
      return (CountTeams) super.setAlt(alt);
    }

    @Override
    public CountTeams setFields(java.lang.String fields) {
      return (CountTeams) super.setFields(fields);
    }

    @Override
    public CountTeams setKey(java.lang.String key) {
      return (CountTeams) super.setKey(key);
    }

    @Override
    public CountTeams setOauthToken(java.lang.String oauthToken) {
      return (CountTeams) super.setOauthToken(oauthToken);
    }

    @Override
    public CountTeams setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CountTeams) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CountTeams setQuotaUser(java.lang.String quotaUser) {
      return (CountTeams) super.setQuotaUser(quotaUser);
    }

    @Override
    public CountTeams setUserIp(java.lang.String userIp) {
      return (CountTeams) super.setUserIp(userIp);
    }

    @Override
    public CountTeams set(String parameterName, Object value) {
      return (CountTeams) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "countUsers".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link CountUsers#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public CountUsers countUsers() throws java.io.IOException {
    CountUsers result = new CountUsers();
    initialize(result);
    return result;
  }

  public class CountUsers extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "countUsers";

    /**
     * Create a request for the method "countUsers".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link CountUsers#execute()} method to invoke the remote operation. <p>
     * {@link
     * CountUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected CountUsers() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public CountUsers setAlt(java.lang.String alt) {
      return (CountUsers) super.setAlt(alt);
    }

    @Override
    public CountUsers setFields(java.lang.String fields) {
      return (CountUsers) super.setFields(fields);
    }

    @Override
    public CountUsers setKey(java.lang.String key) {
      return (CountUsers) super.setKey(key);
    }

    @Override
    public CountUsers setOauthToken(java.lang.String oauthToken) {
      return (CountUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public CountUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CountUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CountUsers setQuotaUser(java.lang.String quotaUser) {
      return (CountUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public CountUsers setUserIp(java.lang.String userIp) {
      return (CountUsers) super.setUserIp(userIp);
    }

    @Override
    public CountUsers set(String parameterName, Object value) {
      return (CountUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "findError".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link FindError#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public FindError findError() throws java.io.IOException {
    FindError result = new FindError();
    initialize(result);
    return result;
  }

  public class FindError extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "findError";

    /**
     * Create a request for the method "findError".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link FindError#execute()} method to invoke the remote operation. <p>
     * {@link
     * FindError#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected FindError() {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
    }

    @Override
    public FindError setAlt(java.lang.String alt) {
      return (FindError) super.setAlt(alt);
    }

    @Override
    public FindError setFields(java.lang.String fields) {
      return (FindError) super.setFields(fields);
    }

    @Override
    public FindError setKey(java.lang.String key) {
      return (FindError) super.setKey(key);
    }

    @Override
    public FindError setOauthToken(java.lang.String oauthToken) {
      return (FindError) super.setOauthToken(oauthToken);
    }

    @Override
    public FindError setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (FindError) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public FindError setQuotaUser(java.lang.String quotaUser) {
      return (FindError) super.setQuotaUser(quotaUser);
    }

    @Override
    public FindError setUserIp(java.lang.String userIp) {
      return (FindError) super.setUserIp(userIp);
    }

    @Override
    public FindError set(String parameterName, Object value) {
      return (FindError) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sayHi".
   *
   * This request holds the parameters needed by the myApi server.  After setting any optional
   * parameters, call the {@link SayHi#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public SayHi sayHi(java.lang.String name) throws java.io.IOException {
    SayHi result = new SayHi(name);
    initialize(result);
    return result;
  }

  public class SayHi extends MyApiRequest<com.example.antonnazareth.keeper.backend.myApi.model.MyBean> {

    private static final String REST_PATH = "sayHi/{name}";

    /**
     * Create a request for the method "sayHi".
     *
     * This request holds the parameters needed by the the myApi server.  After setting any optional
     * parameters, call the {@link SayHi#execute()} method to invoke the remote operation. <p> {@link
     * SayHi#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected SayHi(java.lang.String name) {
      super(MyApi.this, "POST", REST_PATH, null, com.example.antonnazareth.keeper.backend.myApi.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public SayHi setAlt(java.lang.String alt) {
      return (SayHi) super.setAlt(alt);
    }

    @Override
    public SayHi setFields(java.lang.String fields) {
      return (SayHi) super.setFields(fields);
    }

    @Override
    public SayHi setKey(java.lang.String key) {
      return (SayHi) super.setKey(key);
    }

    @Override
    public SayHi setOauthToken(java.lang.String oauthToken) {
      return (SayHi) super.setOauthToken(oauthToken);
    }

    @Override
    public SayHi setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SayHi) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SayHi setQuotaUser(java.lang.String quotaUser) {
      return (SayHi) super.setQuotaUser(quotaUser);
    }

    @Override
    public SayHi setUserIp(java.lang.String userIp) {
      return (SayHi) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SayHi setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public SayHi set(String parameterName, Object value) {
      return (SayHi) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link MyApi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link MyApi}. */
    @Override
    public MyApi build() {
      return new MyApi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MyApiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMyApiRequestInitializer(
        MyApiRequestInitializer myapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(myapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
